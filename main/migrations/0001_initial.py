# Generated by Django 4.2.4 on 2024-03-06 10:16

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('age', models.IntegerField(blank=True, null=True, verbose_name='Yosh')),
                ('phone_number', models.CharField(blank=True, max_length=13, null=True, validators=[django.core.validators.RegexValidator(code='Invalid number', message='Invalide phone number', regex='^[\\+]9{2}8{1}[0-9]{9}$')], verbose_name='Telefon raqam')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Foydalanuvchi',
                'verbose_name_plural': 'Foydalanuvchilar',
                'abstract': False,
                'swappable': 'AUTH_USER_MODEL',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_name', models.CharField(max_length=255, verbose_name='Brand nomi')),
                ('brand_img', models.ImageField(upload_to='brand_img/', verbose_name='Brand rasmi')),
            ],
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('make', models.CharField(max_length=255, verbose_name='Ishlab chiqaruvchi')),
                ('model', models.CharField(max_length=255, verbose_name='Model')),
                ('engine_type', models.CharField(max_length=255, verbose_name='Dvigatel turi')),
                ('img', models.ImageField(upload_to='car_img/', verbose_name='Avtomobil surati')),
                ('fuel_type', models.CharField(max_length=50, verbose_name='Yoritqich turi')),
                ('year', models.IntegerField(verbose_name='Ishlab chiqarilgan yil')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Narx')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.brand', verbose_name='Ishlab chiqaruvchi brand')),
            ],
        ),
        migrations.CreateModel(
            name='Lease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('monthly_payment', models.DecimalField(decimal_places=2, max_digits=10, verbose_name="Oylik to'lov")),
                ('initial_payment', models.DecimalField(decimal_places=2, max_digits=10, verbose_name="Boshlang'ich to'lov")),
                ('contract_months', models.IntegerField(verbose_name='Muddat')),
                ('allowed_mileage', models.IntegerField(verbose_name="Yo'l qilishga ruxsat berilgan masofa")),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.car', verbose_name='Arendaga olish')),
            ],
        ),
        migrations.CreateModel(
            name='GiveawayEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_date', models.DateField(verbose_name='Kirish sanasi')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.car', verbose_name='Avto')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Foydalanuvchi')),
            ],
        ),
    ]
